/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import {
  AddMemberGroupArgs,
  addMemberGroupArgsBeet,
} from '../types/AddMemberGroupArgs'

/**
 * @category Instructions
 * @category AddMemberGroup
 * @category generated
 */
export type AddMemberGroupInstructionArgs = {
  args: AddMemberGroupArgs
}
/**
 * @category Instructions
 * @category AddMemberGroup
 * @category generated
 */
export const addMemberGroupStruct = new beet.FixableBeetArgsStruct<
  AddMemberGroupInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['args', addMemberGroupArgsBeet],
  ],
  'AddMemberGroupInstructionArgs'
)

export const addMemberGroupInstructionDiscriminator = [
  19, 208, 234, 206, 11, 74, 237, 172,
]

/**
 * Creates a _AddMemberGroup_ instruction.
 *
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category AddMemberGroup
 * @category generated
 */
export function createAddMemberGroupInstruction(
  args: AddMemberGroupInstructionArgs,
  programId = new web3.PublicKey('rEcLDWaVLaymz82eGr6cutosPxE6SEzw6q4pbtLuyqf')
) {
  const [data] = addMemberGroupStruct.serialize({
    instructionDiscriminator: addMemberGroupInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = []

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
